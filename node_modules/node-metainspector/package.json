{
  "name": "node-metainspector",
  "description": "Npm package for web scraping purposes. You give it an URL, and it lets you easily get its title, links, images, description, keywords, meta tags",
  "version": "1.0.0",
  "homepage": "http://github.com/gabceb/node-metainspector",
  "repository": {
    "type": "git",
    "url": "git://github.com/gabceb/node-metainspector.git"
  },
  "author": {
    "name": "Gabriel Cebrian",
    "email": "gabceb@gmail.com",
    "url": "http://about.me/gabceb"
  },
  "main": "./index.js",
  "dependencies": {
    "request": "2.20.0",
    "cheerio": "0.10.8",
    "uri-js": "1.4.2"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "node-fakeweb": "0.0.9",
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.7.2"
  },
  "scripts": {
    "test": "make test"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/gabceb/node-metainspector/raw/master/LICENSE"
    }
  ],
  "readme": "![status](https://secure.travis-ci.org/gabceb/node-metainspector.png?branch=master)\n\n## Node-Metainspector\n\nMetaInspector is an npm package for web scraping purposes. You give it an URL, and it lets you easily get its title, links, images, description, keywords, meta tags....\n\nMetainspector is inspired by the Metainspector gem by [jaimeiniesta](https://github.com/jaimeiniesta/metainspector)\n\n### Scraped data\n\n```\nclient.url                \t# URL of the page\nclient.scheme             \t# Scheme of the page (http, https)\nclient.host               \t# Hostname of the page (like, markupvalidator.com, without the scheme)\nclient.rootUrl \t\t\t  \t# Root url (scheme + host, i.e http://simple.com/)\nclient.title              \t# title of the page, as string\nclient.links              \t# array of strings, with every link found on the page as an absolute URL\nclient.author               # page author, as string\nclient.keywords             # keywords from meta tag, as array\nclient.charset              # page charset from meta tag, as string\nclient.description        \t# returns the meta description, or the first long paragraph if no meta description is found\nclient.image              \t# Most relevant image, if defined with og:image\nclient.images              \t# array of strings, with every img found on the page as an absolute URL\nclient.feeds            \t# Get rss or atom links in meta data fields as array\nclient.oGtitle      \t\t# opengraph title\n\n```\n\n## Usage\n\n```javascript\nvar client = new MetaInspector(\"http://www.google.com\", {});\n\nclient.on(\"fetch\", function(){\n    console.log(\"Description: \" + client.description;\n\n    console.log(\"Links: \" + client.links.join(\",\"));\n});\n\nclient.on(\"error\", function(err){\n\tconsole.log(error);\n});\n\nclient.fetch();\n\n```\n\n## TO DO\n\nFinish implementation of the properties below:\n\n```\nAdd absolutify url function to return all urls as an absolute url\n\nclient.internal_links     \t# array of strings, with every internal link found on the page as an absolute URL\nclient.external_links     \t# array of strings, with every external link found on the page as an absolute URL\n\n```\n\n## ZOMG Fork! Thank you!\nYou're welcome to fork this project and send pull requests. Just remember to include tests.\n\nCopyright (c) 2009-2012 Gabriel Cebrian, released under the MIT license\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/gabceb/node-metainspector/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gabceb/node-metainspector/issues"
  },
  "_id": "node-metainspector@1.0.0",
  "_from": "node-metainspector@>=1.0.0 <2.0.0"
}
